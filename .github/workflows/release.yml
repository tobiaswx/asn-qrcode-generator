name: Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  releases-matrix:
    name: Release Binary
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          # Set CGO flags based on target architecture
          if [ "${{ matrix.goarch }}" = "arm64" ] && [ "${{ matrix.goos }}" = "linux" ]; then
            export CC=aarch64-linux-gnu-gcc
          fi
          
          # Build the binary
          OUTPUT="asn-qrcode-generator-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT="${OUTPUT}.exe"
          fi
          go build -o "${OUTPUT}" -v

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: asn-qrcode-generator-${{ matrix.goos }}-${{ matrix.goarch }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}